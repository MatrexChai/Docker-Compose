version: "3.8"

services:
  cron:
    container_name: nextcloud-cron
    depends_on:
      nextcloud:
        condition: service_started
    entrypoint:
      - /cron.sh
    image: nextcloud:fpm
    restart: unless-stopped
    volumes:
      - /DATA/AppData/NextCloud/nextcloud:/var/www/html
    networks:
      - nextcloud_net

  nextcloud:
    container_name: nextcloud
    depends_on:
      onlyoffice:
        condition: service_started
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=nextcloud
      - REDIS_HOST=redis
    image: nextcloud:fpm
    restart: unless-stopped
    volumes:
      - /DATA/AppData/NextCloud/nextcloud:/var/www/html
      - /DATA/AppData/NextCloud/apps:/var/www/html/apps
      - /DATA/AppData/NextCloud/config:/var/www/html/config
      - /DATA/AppData/NextCloud/data:/var/www/html/data
    networks:
      - nextcloud_net

  nginx:
    container_name: nextcloud-nginx
    depends_on:
      nextcloud:
        condition: service_started
    image: nginx:alpine
    ports:
      - "8080:80"
    restart: unless-stopped
    volumes:
      - /DATA/AppData/NextCloud/nextcloud:/var/www/html
      - /DATA/AppData/NextCloud/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - nextcloud_net

  onlyoffice:
    container_name: onlyoffice
    environment:
      - JWT_ENABLED=true
      - JWT_SECRET=supersecure
    image: onlyoffice/documentserver:latest
    ports:
      - "8082:80"
    restart: unless-stopped
    volumes:
      - /DATA/AppData/NextCloud/onlyoffice:/var/www/onlyoffice/data
    networks:
      - nextcloud_net

  postgres:
    container_name: postgres  # ðŸ’¥ renamed to match POSTGRES_HOST
    image: postgres:alpine  # ðŸ’¡ version-pinned
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=nextcloud
    volumes:
      - /DATA/AppData/NextCloud/postgresql:/var/lib/postgresql/data
    networks:
      - nextcloud_net
    healthcheck:  # âœ… ensures db is up before nextcloud starts
      test: ["CMD-SHELL", "pg_isready -U nextcloud"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: redis  # ðŸ’¥ renamed to match REDIS_HOST
    image: redis:alpine
    restart: unless-stopped
    volumes:
      - /DATA/AppData/NextCloud/redis:/data
    networks:
      - nextcloud_net

networks:
  nextcloud_net:
    driver: bridge
