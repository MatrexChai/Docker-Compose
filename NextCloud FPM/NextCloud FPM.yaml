version: '3.8'

services:
  nextcloud:
    container_name: nextcloud
    image: nextcloud:fpm
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_HOST=postgres
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=nextcloud
      - REDIS_HOST=redis
      - NEXTCLOUD_DATA_DIR=/var/www/html/data
      - OVERWRITEPROTOCOL=https  # Required for reverse proxy
    volumes:
      - /DATA/AppData/NextCloud/html:/var/www/html  # Core files + config
      - /DATA/AppData/NextCloud/data:/var/www/html/data  # User data (separate)
    networks:
      - nextcloud_net
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/status.php"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    container_name: nextcloud-nginx
    image: nginx:alpine
    restart: unless-stopped
    depends_on:
      nextcloud:
        condition: service_healthy
    ports:
      - "8080:80"
    volumes:
      - /DATA/AppData/NextCloud/html:/var/www/html:ro  # Read-only access
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - nextcloud_net

  onlyoffice:
    container_name: onlyoffice
    image: onlyoffice/documentserver:latest
    restart: unless-stopped
    environment:
      - JWT_ENABLED=true
      - JWT_SECRET=supersecure
    ports:
      - "8082:80"
    volumes:
      - /DATA/AppData/NextCloud/onlyoffice:/var/www/onlyoffice/data
    networks:
      - nextcloud_net

  postgres:
    container_name: nextcloud-db
    image: postgres:alpine
    restart: unless-stopped
    environment:
      - POSTGRES_DB=nextcloud
      - POSTGRES_PASSWORD=changeme
      - POSTGRES_USER=nextcloud
    volumes:
      - /DATA/AppData/NextCloud/postgresql:/var/lib/postgresql/data
    networks:
      - nextcloud_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nextcloud"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    container_name: nextcloud-redis
    image: redis:alpine
    restart: unless-stopped
    command: redis-server --requirepass changeme  # Always set a Redis password
    volumes:
      - /DATA/AppData/NextCloud/redis:/data
    networks:
      - nextcloud_net
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  cron:
    container_name: nextcloud-cron
    image: nextcloud:fpm
    restart: unless-stopped
    entrypoint: /cron.sh
    depends_on:
      nextcloud:
        condition: service_healthy
    volumes:
      - /DATA/AppData/NextCloud/html:/var/www/html  # Matches nextcloud volume
      - /DATA/AppData/NextCloud/data:/var/www/html/data
    networks:
      - nextcloud_net

networks:
  nextcloud_net:
    driver: bridge
